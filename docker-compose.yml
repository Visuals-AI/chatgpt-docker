version: '3'

services:
  web-chatgpt:
    # image: expm02/chatgpt-docker:latest
    build:
      context: ./chatgpt-web
      dockerfile: ./Dockerfile
    container_name: web-chatgpt
    hostname: web-chatgpt
    # ports:
    #   - 127.0.0.1:3002:3002
    environment:
      # 二选一
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      # 二选一
      # OPENAI_ACCESS_TOKEN: xxx
      # API接口地址，可选，设置 OPENAI_API_KEY 时可用
      # OPENAI_API_BASE_URL: xxx
      # API模型，可选，设置 OPENAI_API_KEY 时可用，https://platform.openai.com/docs/models
      # gpt-4, gpt-4-0314, gpt-4-0613, gpt-4-32k, gpt-4-32k-0314, gpt-4-32k-0613, gpt-3.5-turbo-16k, gpt-3.5-turbo-16k-0613, gpt-3.5-turbo, gpt-3.5-turbo-0301, gpt-3.5-turbo-0613, text-davinci-003, text-davinci-002, code-davinci-002
      OPENAI_API_MODEL: ${OPENAI_MODEL}
      # 反向代理，可选
      # API_REVERSE_PROXY: xxx
      # 访问权限密钥，可选
      # AUTH_SECRET_KEY: xxx
      # 每小时最大请求次数，可选，默认无限
      # MAX_REQUEST_PER_HOUR: 0
      # 超时，单位毫秒，可选
      # TIMEOUT_MS: 60000
      # Socks代理，可选，和 SOCKS_PROXY_PORT 一起时生效
      SOCKS_PROXY_HOST: ${SOCKS_PROXY_HOST}
      # Socks代理端口，可选，和 SOCKS_PROXY_HOST 一起时生效
      SOCKS_PROXY_PORT: ${SOCKS_PROXY_PORT}
      # HTTPS 代理，可选，支持 http，https，socks5
      HTTPS_PROXY: ${HTTPS_PROXY}
    networks:
      web-net:
        ipv4_address: 172.168.100.2
    restart: on-failure


  web-nginx:
    # image: expm02/web-nginx:latest
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: web-nginx
    hostname: web-nginx
    environment:
      - TZ=Asia/Shanghai
      - LANG=zh_CN.UTF-8
      - LANGUAGE=zh_CN.UTF-8
      - LC_ALL=zh_CN.UTF-8
      - PROTOCOL=${PROTOCOL}
      - NGINX_DOMAIN=${DOMAIN}
    volumes:
      - ./nginx/etc:/tmp/nginx/etc
      - ./nginx/cert:/etc/nginx/cert
      - ./nginx/html/common:/usr/share/nginx/html/common
      - ./nginx/html/5xx.html:/usr/share/nginx/html/5xx.html
      - ./.basicauth:/etc/nginx/passdb/.basicauth
      - ./logs/nginx:/var/log/nginx
      - ./logs/flask:/app/py/logs
    ports:
      # HTTP 协议，只能暴露在测试环境
      - 7080:80
      # HTTPS 协议，需要挂载有效的 HTTPS 证书
      - 7443:443
      # flask 日志服务器
      # - 5000:5000
    networks:
      web-net:
        ipv4_address: 172.168.100.3
    extra_hosts:
      - "${DOMAIN}:${INTER_IP}"
    restart: on-failure


networks:
  web-net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet:  172.168.100.0/24
          gateway: 172.168.100.1
